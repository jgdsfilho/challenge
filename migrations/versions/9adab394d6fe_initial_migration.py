"""Initial migration

Revision ID: 9adab394d6fe
Revises: 
Create Date: 2025-01-15 10:24:41.214288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '9adab394d6fe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_sku', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=True)
    op.create_index(op.f('ix_products_product_sku'), 'products', ['product_sku'], unique=True)
    op.create_table('tenants',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('billings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('total_billing', sa.Float(), nullable=False),
    sa.Column('billing_date', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('uq_active_billing_tenant', 'billings', ['tenant_id', 'is_active', 'billing_date'], unique=True, postgresql_where=sa.text('is_active = true'))
    op.create_table('contracts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('uq_active_contract_tenant_product_active', 'contracts', ['tenant_id', 'product_id', 'is_active'], unique=True, postgresql_where=sa.text('is_active = true'))
    op.create_table('product_prices',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('use_unity', sa.Enum('gb_mo', 'hour', 'hosted_zone', 'keys', 'request', 'alarm', 'metrics', name='useunit'), nullable=True),
    sa.Column('free_allocation', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('uq_prices_per_product', 'product_prices', ['is_active', 'product_id'], unique=True, postgresql_where=sa.text('is_active = true'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_prices_per_product', table_name='product_prices', postgresql_where=sa.text('is_active = true'))
    op.drop_table('product_prices')
    op.drop_index('uq_active_contract_tenant_product_active', table_name='contracts', postgresql_where=sa.text('is_active = true'))
    op.drop_table('contracts')
    op.drop_index('uq_active_billing_tenant', table_name='billings', postgresql_where=sa.text('is_active = true'))
    op.drop_table('billings')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_products_product_sku'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###

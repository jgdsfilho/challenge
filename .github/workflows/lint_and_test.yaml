name: CI Workflow

on:
  pull_request:
    branches:
      - "*"

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    env:
      DB_ASYNC_CONNECTION_STR: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
      DB_ASYNC_CONNECTION_STR_TEST: postgresql+asyncpg://postgres:postgres@localhost:5432/test_db
      POETRY_VERSION: "1.7.1"

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-timeout=5s
          --health-interval=10s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ env.POETRY_VERSION }}

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run check lint
        run: poetry run ruff check . && poetry run black . --check

      - name: Run Alembic migrations
        run: |
          poetry run alembic upgrade head

      - name: Run tests with pytest
        run: poetry run pytest --maxfail=1 -p no:warnings
